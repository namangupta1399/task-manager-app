{"version":3,"sources":["Navbar.js","Base.js","App.js","components/users/apicalls.js","components/users/UserForm.js","components/users/Users.js","components/tasks/apicalls.js","components/tasks/TaskForm.js","components/tasks/Tasks.js","NotFound.js","Routes.js","index.js"],"names":["Navbar","checkActiveLink","path","props","history","location","pathname","className","to","this","href","target","Component","withRouter","Base","children","App","style","textAlign","class","getUsers","a","axios","get","response","createUser","data","post","updateUser","id","patch","removeUser","delete","UserForm","type","firstname","lastname","handleChange","onSubmit","resetForm","display","alignItems","justifyContent","onClick","name","placeholder","value","onChange","Users","state","users","formType","initialState","e","preventDefault","setState","alert","index","findIndex","user","_id","updatedUsers","filter","prevState","length","map","bind","colSpan","getTasks","createTask","updateTask","removeTask","TaskForm","task","taskName","assignedTo","dueDate","completed","selected","moment","format","tabIndex","checked","htmlFor","Tasks","tasks","activeTask","by","getUserById","updatedTasks","updateTaskStatus","taskList","toLowerCase","includes","document","querySelectorAll","forEach","data-label","NotFound","Routes","exact","component","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.0e7c37ff.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n  checkActiveLink = (path) => {\r\n    if (this.props.history.location.pathname === path) {\r\n      return 'active';\r\n    }\r\n\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"ui container\">\r\n        <div className=\"ui secondary  menu\">\r\n          <Link to=\"/\" className={`item ${this.checkActiveLink('/')}`}>\r\n            Home\r\n          </Link>\r\n          <Link to=\"/users\" className={`item ${this.checkActiveLink('/users')}`}>\r\n            Users\r\n          </Link>\r\n          <Link to=\"/tasks\" className={`item ${this.checkActiveLink('/tasks')}`}>\r\n            Tasks\r\n          </Link>\r\n          <div className=\"right menu\">\r\n            <div className=\"item\">\r\n              <div className=\"ui icon input\">\r\n                <h4>Developed by <a href=\"https://www.linkedin.com/in/namangupta1399/\" target=\"_blank\">Naman Gupta</a></h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Navbar);\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nclass Base extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navbar />\r\n        <div className=\"ui container\">{this.props.children}</div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Base;\r\n","import React, { Component } from \"react\";\r\nimport Base from \"./Base\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Base>\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <h1 class=\"ui icon header\">\r\n            <i class=\"settings icon\"></i>\r\n            <div class=\"content\">\r\n              Task Manager\r\n              <div class=\"sub header\">\r\n                Manage your tasks and user settings easily.\r\n              </div>\r\n            </div>\r\n          </h1>\r\n        </div>\r\n      </Base>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import axios from \"axios\";\r\n\r\nexport const getUserById = async (id) => {\r\n  const response = await axios.get(`/api/users/${id}`);\r\n  return response;\r\n};\r\n\r\nexport const getUsers = async () => {\r\n  const response = await axios.get(\"/api/users\");\r\n  return response;\r\n};\r\n\r\nexport const createUser = async (data) => {\r\n  const response = await axios.post(\"/api/users\", data);\r\n  return response;\r\n};\r\n\r\nexport const updateUser = async (id, data) => {\r\n  const response = await axios.patch(`/api/users/${id}`, data);\r\n  return response;\r\n};\r\n\r\nexport const removeUser = async (id) => {\r\n  const response = await axios.delete(`/api/users/${id}`);\r\n  return response;\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass UserForm extends Component {\r\n  render() {\r\n    const { type, firstname, lastname, handleChange, onSubmit, resetForm } = this.props;\r\n    return (\r\n      <div className=\"ui segment\">\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <h1>{type === \"new\" ? \"New User\" : \"Update User\"}</h1>\r\n          <button class=\"ui labeled icon button\" onClick={resetForm} type=\"button\">\r\n            <i class=\"sync icon\"></i>\r\n            Reset form\r\n          </button>\r\n        </div>\r\n        <form onSubmit={onSubmit} className=\"ui form\">\r\n          <div className=\"field\">\r\n            <label>First Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"firstname\"\r\n              placeholder=\"First Name\"\r\n              value={firstname}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Last Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"lastname\"\r\n              placeholder=\"Last Name\"\r\n              value={lastname}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <button className=\"ui button\" type=\"submit\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserForm;\r\n","import React, { Component } from \"react\";\r\nimport Base from \"../../Base\";\r\nimport { createUser, getUsers, removeUser, updateUser } from \"./apicalls\";\r\nimport UserForm from \"./UserForm\";\r\n\r\nclass Users extends Component {\r\n  state = {\r\n    users: [],\r\n    formType: \"new\",\r\n    id: \"\",\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n  };\r\n\r\n  initialState = { ...this.state };\r\n\r\n  async componentDidMount() {\r\n    const response = await getUsers();\r\n    this.setState({ users: response.data });\r\n  }\r\n\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { id, firstname, lastname } = this.state;\r\n\r\n    if (this.state.formType === \"new\") {\r\n      try {\r\n        const response = await createUser({ firstname, lastname });\r\n        this.setState({\r\n          ...this.initialState,\r\n          users: [...this.state.users, response.data],\r\n        });\r\n        alert(\"User created successfully!\");\r\n      } catch (error) {\r\n        alert(\"Unable to add user.\");\r\n      }\r\n    } else {\r\n      try {\r\n        const response = await updateUser(id, { firstname, lastname });\r\n        const users = [...this.state.users];\r\n        const index = users.findIndex((user) => {\r\n          return user._id === response.data._id;\r\n        });\r\n        users[index] = { ...response.data };\r\n        this.setState({\r\n          ...this.initialState,\r\n          users,\r\n        });\r\n        alert(\"User updated successfully!\");\r\n      } catch (error) {\r\n        alert(\"Error while updating user\");\r\n      }\r\n    }\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  removeUser = async (id) => {\r\n    try {\r\n      const response = await removeUser(id);\r\n\r\n      const users = [...this.state.users];\r\n      const updatedUsers = users.filter(\r\n        (user) => user._id !== response.data._id\r\n      );\r\n      this.setState({ users: [...updatedUsers] });\r\n      alert(\"User deleted successfully!\");\r\n    } catch (error) {\r\n      alert(\"Error while deleting user!\");\r\n    }\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        ...this.initialState,\r\n        users: prevState.users,\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Base>\r\n        <UserForm\r\n          handleChange={this.handleChange}\r\n          onSubmit={this.onSubmit}\r\n          firstname={this.state.firstname}\r\n          lastname={this.state.lastname}\r\n          type={this.state.formType}\r\n          resetForm={this.resetForm}\r\n        />\r\n        <div className=\"ui segment\">\r\n          <h1>Users</h1>\r\n          <table className=\"ui celled table center aligned\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>First name</th>\r\n                <th>Last name</th>\r\n                <th>Edit</th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.users.length ? (\r\n                this.state.users.map((user, index) => (\r\n                  <tr key={index}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{user.firstname}</td>\r\n                    <td>{user.lastname}</td>\r\n                    <td>\r\n                      <button\r\n                        className=\"ui compact icon yellow button\"\r\n                        onClick={() =>\r\n                          this.setState({\r\n                            formType: \"edit\",\r\n                            id: user._id,\r\n                            firstname: user.firstname,\r\n                            lastname: user.lastname,\r\n                          })\r\n                        }\r\n                      >\r\n                        <i className=\"edit icon\"></i>\r\n                      </button>\r\n                    </td>\r\n                    <td>\r\n                      <button\r\n                        className=\"ui compact icon red button\"\r\n                        onClick={this.removeUser.bind(this, user._id)}\r\n                      >\r\n                        <i className=\"trash icon\"></i>\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan={6}>\r\n                    <h5>No users</h5>\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </Base>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Users;\r\n","import axios from \"axios\";\r\n\r\nexport const getTasks = async () => {\r\n  const response = await axios.get(\"/api/tasks\");\r\n  return response;\r\n};\r\n\r\nexport const createTask = async (data) => {\r\n  const response = await axios.post(\"/api/tasks\", data);\r\n  return response;\r\n};\r\n\r\nexport const updateTask = async (id, data) => {\r\n  const response = await axios.patch(`/api/tasks/${id}`, data);\r\n  return response;\r\n};\r\n\r\nexport const removeTask = async (id) => {\r\n  const response = await axios.delete(`/api/tasks/${id}`);\r\n  return response;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nclass TaskForm extends Component {\r\n  render() {\r\n    const {\r\n      users,\r\n      type,\r\n      handleChange,\r\n      onSubmit,\r\n      resetForm,\r\n      task: { taskName, assignedTo, dueDate, completed },\r\n    } = this.props;\r\n    return (\r\n      <form onSubmit={onSubmit} className=\"ui equal width form\">\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <h1>{type === \"new\" ? \"New Task\" : \"Update Task\"}</h1>\r\n          <button class=\"ui labeled icon button\" onClick={resetForm} type=\"button\">\r\n            <i class=\"sync icon\"></i>\r\n            Reset form\r\n          </button>\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>Task Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"taskName\"\r\n            value={taskName}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"fields\">\r\n          <div className=\"field\">\r\n            <label>Assigned to</label>\r\n            <select name=\"assignedTo\" onChange={handleChange}>\r\n              <option value=\"\">Select user</option>\r\n              {users.map((user) => (\r\n                <option\r\n                  selected={assignedTo === user._id}\r\n                  key={user._id}\r\n                  value={user._id}\r\n                >{`${user.firstname} ${user.lastname}`}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Due date</label>\r\n            <input\r\n              type=\"date\"\r\n              name=\"dueDate\"\r\n              value={moment(dueDate).format(\"YYYY-MM-DD\")}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>Status</label>\r\n          <div className=\"ui checkbox\">\r\n            <input\r\n              id=\"completed\"\r\n              name=\"completed\"\r\n              type=\"checkbox\"\r\n              tabIndex=\"0\"\r\n              checked={completed}\r\n              onChange={handleChange}\r\n            />\r\n            <label htmlFor=\"completed\">Completed</label>\r\n          </div>\r\n        </div>\r\n        <button className=\"ui button\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskForm;\r\n","import moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport Base from \"../../Base\";\r\nimport { getUsers } from \"../users/apicalls\";\r\nimport { createTask, getTasks, removeTask, updateTask } from \"./apicalls\";\r\nimport TaskForm from \"./TaskForm\";\r\n\r\nclass Tasks extends Component {\r\n  state = {\r\n    formType: \"new\",\r\n    users: [],\r\n    tasks: [],\r\n    activeTask: {\r\n      taskName: \"\",\r\n      dueDate: moment().format(\"YYYY-MM-DD\"),\r\n      assignedTo: \"\",\r\n      completed: false,\r\n    },\r\n    filter: {\r\n      by: \"\",\r\n      value: \"\",\r\n    },\r\n  };\r\n\r\n  initialState = { ...this.state };\r\n\r\n  async componentDidMount() {\r\n    const users = await getUsers();\r\n    const tasks = await getTasks();\r\n    this.setState({ users: users.data, tasks: tasks.data });\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const value =\r\n      e.target.name === \"completed\" ? e.target.checked : e.target.value;\r\n\r\n    this.setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        activeTask: {\r\n          ...prevState.activeTask,\r\n          [e.target.name]: value,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { _id, taskName, assignedTo, dueDate, completed } = {\r\n      ...this.state.activeTask,\r\n    };\r\n\r\n    const data = { taskName, assignedTo, dueDate, completed };\r\n\r\n    if (this.state.formType === \"new\") {\r\n      try {\r\n        const response = await createTask(data);\r\n        \r\n\r\n        this.setState((prevState) => {\r\n          return {\r\n            ...this.initialState,\r\n            users: prevState.users,\r\n            tasks: [...prevState.tasks, response.data],\r\n          };\r\n        });\r\n        alert(\"Task created successfully!\");\r\n      } catch (error) {\r\n        alert(\"Error while creating task!\");\r\n      }\r\n    } else {\r\n      try {\r\n        const response = await updateTask(_id, data);\r\n        const tasks = [...this.state.tasks];\r\n        const index = tasks.findIndex((task) => {\r\n          return task._id === response.data._id;\r\n        });\r\n        tasks[index] = { ...response.data };\r\n        this.setState((prevState) => {\r\n          return {\r\n            ...this.initialState,\r\n            users: prevState.users,\r\n            tasks,\r\n          };\r\n        });\r\n        alert(\"Task updated successfully!\");\r\n      } catch (error) {\r\n        alert(\"Error while updating task!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  getUserById = (id) => {\r\n    const index = this.state.users.findIndex((user) => user._id === id);\r\n    return { ...this.state.users[index] };\r\n  };\r\n\r\n  removeTask = async (id) => {\r\n    try {\r\n      const response = await removeTask(id);\r\n\r\n      const tasks = [...this.state.tasks];\r\n      const updatedTasks = tasks.filter(\r\n        (task) => task._id !== response.data._id\r\n      );\r\n      this.setState({ tasks: [...updatedTasks] });\r\n      alert(\"Task removed successfully!\");\r\n    } catch (error) {\r\n      alert(\"Error while removing task!\");\r\n    }\r\n  };\r\n\r\n  updateTaskStatus = async (e, id, completed, index) => {\r\n    const response = await updateTask(id, { completed: !completed });\r\n\r\n    const tasks = [...this.state.tasks];\r\n    tasks[index] = { ...response.data };\r\n    this.setState({ tasks });\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        ...this.initialState,\r\n        users: prevState.users,\r\n        tasks: prevState.tasks,\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    let taskList = [];\r\n\r\n    switch (filter.by) {\r\n      case \"search\":\r\n        taskList = this.state.tasks.filter((task) =>\r\n          task.taskName.toLowerCase().includes(filter.value.toLowerCase())\r\n        );\r\n        break;\r\n      case \"pending/completed\":\r\n        if (filter.value === \"pending\") {\r\n          taskList = this.state.tasks.filter((task) => !task.completed);\r\n        } else if (filter.value === \"completed\") {\r\n          taskList = this.state.tasks.filter((task) => task.completed);\r\n        } else {\r\n          taskList = [...this.state.tasks];\r\n        }\r\n        break;\r\n      case \"date\":\r\n        taskList = this.state.tasks.filter(\r\n          (task) => moment(task.dueDate).format(\"YYYY-MM-DD\") === filter.value\r\n        );\r\n        break;\r\n      default:\r\n        taskList = [...this.state.tasks];\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <Base>\r\n        <div className=\"ui segment\">\r\n          <TaskForm\r\n            type={this.state.formType}\r\n            users={this.state.users}\r\n            task={this.state.activeTask}\r\n            handleChange={this.handleChange}\r\n            onSubmit={this.onSubmit}\r\n            resetForm={this.resetForm}\r\n          />\r\n        </div>\r\n        <div className=\"ui segment\">\r\n          <h1>Task List</h1>\r\n          <div className=\"ui equal width form\">\r\n            <label>Filter:</label>\r\n            <div className=\"fields\">\r\n              <div className=\"field\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"filter\"\r\n                  onChange={(e) => {\r\n                    this.setState({\r\n                      filter: { by: \"search\", value: e.target.value },\r\n                    });\r\n                  }}\r\n                  placeholder=\"Search by task name\"\r\n                />\r\n              </div>\r\n              <div className=\"field\">\r\n                <select\r\n                  className=\"filter\"\r\n                  onChange={(e) => {\r\n                    this.setState({\r\n                      filter: {\r\n                        by: \"pending/completed\",\r\n                        value: e.target.value,\r\n                      },\r\n                    });\r\n                  }}\r\n                >\r\n                  <option value=\"\">Pending / Completed</option>\r\n                  <option value=\"pending\">Pending</option>\r\n                  <option value=\"completed\">Completed</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"field\">\r\n                <input\r\n                  className=\"filter\"\r\n                  type=\"date\"\r\n                  onChange={(e) => {\r\n                    this.setState({\r\n                      filter: { by: \"date\", value: e.target.value },\r\n                    });\r\n                  }}\r\n                />\r\n              </div>\r\n              <button\r\n                className=\"ui button\"\r\n                onClick={() => {\r\n                  document.querySelectorAll(\".filter\").forEach((filter) => {\r\n                    filter.value = \"\";\r\n                  });\r\n                  this.setState({ filter: { by: \"\", value: \"\" } });\r\n                }}\r\n              >\r\n                Clear\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <table className=\"ui celled table center aligned\">\r\n            <thead>\r\n              <tr>\r\n                <th>Task name</th>\r\n                <th>Assigned to</th>\r\n                <th>Due date</th>\r\n                <th>Completed</th>\r\n                <th>Edit</th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {taskList.length ? (\r\n                taskList.map((task, index) => {\r\n                  const user = this.getUserById(task.assignedTo);\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td data-label=\"TaskName\">{task.taskName}</td>\r\n                      <td data-label=\"User\">{`${user.firstname} ${user.lastname}`}</td>\r\n                      <td data-label=\"Due date\">\r\n                        {moment(task.dueDate).format(\"DD/MM/YYYY\")}\r\n                      </td>\r\n                      <td data-label=\"Completed\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={task.completed}\r\n                          onChange={(e) =>\r\n                            this.updateTaskStatus(\r\n                              e,\r\n                              task._id,\r\n                              task.completed,\r\n                              index\r\n                            )\r\n                          }\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <button\r\n                          onClick={() => {\r\n                            this.setState({\r\n                              formType: \"edit\",\r\n                              activeTask: task,\r\n                            });\r\n                          }}\r\n                          className=\"ui compact icon yellow button\"\r\n                        >\r\n                          <i className=\"edit icon\"></i>\r\n                        </button>\r\n                      </td>\r\n                      <td>\r\n                        <button\r\n                          className=\"ui compact icon red button\"\r\n                          onClick={this.removeTask.bind(this, task._id)}\r\n                        >\r\n                          <i className=\"trash icon\"></i>\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan={6}>\r\n                    <h5>No tasks</h5>\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </Base>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tasks;\r\n","import React, { Component } from 'react'\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Page not found\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NotFound\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport Users from \"./components/users/Users\";\r\nimport Tasks from \"./components/tasks/Tasks\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={App} />\r\n        <Route path=\"/users\" component={Users} />\r\n        <Route path=\"/tasks\" component={Tasks} />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Routes from \"./Routes\";\r\n\r\nReactDOM.render(<Routes />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}